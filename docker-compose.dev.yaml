services:
  e-chiro-app:
    container_name: e-chiro-app-dev
    image: e-chiro-app
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=${NODE_ENV}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DB_HOST=${DB_HOST}
      - DATABASE_URL=${DATABASE_URL}
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME}
      - NEXT_PUBLIC_APP_DESCRIPTION=${NEXT_PUBLIC_APP_DESCRIPTION}
      - NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL}
      - AUTH_SECRET=${AUTH_SECRET}
    ports:
      - "${APP_PORT:-3000}:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      e-chiro-db:
        condition: service_healthy
    networks:
      - e-chiro-network

  e-chiro-db:
    image: postgres:15-alpine
    container_name: e-chiro-db-dev
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - e-chiro-db-data:/var/lib/postgresql/data
    networks:
      - e-chiro-network

volumes:
  e-chiro-db-data:
    name: e-chiro-db-data

networks:
  e-chiro-network:
    name: e-chiro-network
    driver: bridge
